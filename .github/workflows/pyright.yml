# Split workflow file to not interfere with skeleton
name: pyright

on:
  merge_group:
  push:
    branches-ignore:
    # temporary GH branches relating to merge queues (jaraco/skeleton#93)
    - gh-readonly-queue/**
    tags:
    # required if branches-ignore is supplied (jaraco/skeleton#103)
    - '**'
  pull_request:
  workflow_dispatch:

concurrency:
  group: >-
    ${{ github.workflow }}-
    ${{ github.ref_type }}-
    ${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

env:
  # pin pyright so a new version doesn't suddenly cause the CI to fail,
  # until types-setuptools is removed from typeshed.
  # For help with static-typing issues, or pyright update, ping @Avasam
  PYRIGHT_VERSION: "1.1.377"

  # Environment variable to support color support (jaraco/skeleton#66)
  FORCE_COLOR: 1

  # Suppress noisy pip warnings
  PIP_DISABLE_PIP_VERSION_CHECK: 'true'
  PIP_NO_PYTHON_VERSION_WARNING: 'true'
  PIP_NO_WARN_SCRIPT_LOCATION: 'true'

jobs:
  pyright:
    strategy:
      # https://blog.jaraco.com/efficient-use-of-ci-resources/
      matrix:
        python:
          - "3.8"
          - "3.12"
        platform:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        include:
          - python: "3.9"
            platform: ubuntu-latest
          - python: "3.10"
            platform: ubuntu-latest
          - python: "3.11"
            platform: ubuntu-latest
          # Python 3.8, 3.9 are on macos-13 but not macos-latest (macos-14-arm64)
          # https://github.com/actions/setup-python/issues/850
          # https://github.com/actions/setup-python/issues/696#issuecomment-1637587760
          - {python: "3.8", platform: "macos-13"}
        exclude:
          - {python: "3.8", platform: "macos-latest"}
    runs-on: ${{ matrix.platform }}
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        id: python-install
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          allow-prereleases: true
      - name: Install typed dependencies
        run: python -m pip install .[core][type]
      - name: Inform how to run locally
        run: |
          echo 'To run this test locally with npm pre-installed, run:'
          echo '> npx -y pyright@${{ env.PYRIGHT_VERSION }} --threads'
          echo 'You can also instead install "Pyright for Python" which will install npm for you:'
          if [$PYRIGHT_VERSION == 'latest'] then
            echo '> pip install -U'
          else
            echo '> pip install pyright==${{ env.PYRIGHT_VERSION }}'
          fi
          echo 'pyright --threads'
      - name: Run pyright
        uses: jakebailey/pyright-action@v2
        with:
          version: ${{ env.PYRIGHT_VERSION }}
